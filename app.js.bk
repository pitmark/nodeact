var http = require('http'),
    fs =require('fs');　//ファイルシステムモジュールの読み込み
var server = http.createServer();
var moment = require('moment');
var settings = require('./settings');

var CryptoJS = require('crypto-js');
var key = "1234567890987654321";

var m = moment();

console.log(settings);
server.on('request', function(req, res) {

var nowdir = req.url;
var nowdirs = nowdir.split('/');

if(nowdirs[1] == ""){
   nowdirs[1] = "home";
}

var dir_arr = ["home","item","login","logout"];
if(dir_arr.indexOf(nowdirs[1]) == -1){
  nowdirs[1] = "notfound";
}

    if ( req.url.match(/.css/)) {
        nowdirs[1] = "css";
        cssfile = req.url;
    }

    if ( req.url.match(/.js/)) {
        nowdirs[1] = "js";
        jsfile = req.url;
    }

    if(nowdirs[1] != "css" && nowdirs[1] != "js" && nowdirs[1] != "login"){
        fs.readFile(__dirname + '/views/layout.html', 'utf-8', function(err, data){
            res.writeHead(200, {'Content-Type': 'text/html'});　//htmlファイルなんでhtml
            data = data.replace("content","content_"+ nowdirs[1]);

            if(nowdirs[1]=="item"){
            var item = nowdirs[2];
            var item_id = getItemData(item,res);

console.log(item_id);


var maisuu = 1000;
var p_data = (function(param) {return param[0].replace(/\n|\r/g, "");})`
<div id="data" >
{"data":[{"id":1,"maisuu":100,"price":1000},
{"id":2,"maisuu":200,"price":2000}]}
</div>`;

data = data.replace("@@json_data@@",p_data);

            }


            res.write(data);
            res.end();
        });


    }else if(nowdirs[1] == "css"){
        fs.readFile(__dirname +'/public_html'+ cssfile , 'utf-8', function(err, data){
            res.writeHead(200, {'Content-Type': 'text/css'});　//CSSファイルなんでCSS
            res.write(data);
            res.end();
        });
    }else if(nowdirs[1] == "js"){
        fs.readFile(__dirname +'/public_html'+ jsfile , 'utf-8', function(err, data){
            res.writeHead(200, {'Content-Type': 'text/plain'});　//JSファイルなんでplain
            res.write(data);
            res.end();
        });
    }else if(nowdirs[1] == "login"){
        if(req.method=='POST') {
   
            var data = '';
            req.setEncoding('utf8'); // 受信するレスポンスボディのエンコード形式をutf8に指定
            req.on('data', function(chunk) {
                data += chunk;
            });
            req.on('end', function() {
                json_data =JSON.parse(data);
                mysql_response(res,json_data);
            });
        }    
    }

});


function mysql_response(res,data){

    let mysql = require('mysql');
    let connection = mysql.createConnection({
        host : '172.17.0.1',
        user : settings.mysqluser,
        password : settings.mysqlpassword,
        port : 3306,
        database: 'react_DB'
    });

    connection.connect();
    connection.query('SELECT id,userid,password FROM users WHERE userid = "'+ json_data['userid'] +'" AND password = "'+ json_data['password'] +'" ;',function(err,rows){
        if(err){
            console.log(err);
            return;
        }
        if(rows && rows.length){
            res.writeHead(200);
            var session = CryptoJS.AES.encrypt(rows[0].userid,key);
            var encryptData = session.toString();
            res.end(encryptData);
            console.log("ok");
            return;
            //var decrypted = CryptoJS.AES.decrypt(encryptData,key);
            //console.log(decrypted.toString(CryptoJS.enc.Utf8));
        }else{
            res.writeHead(200);
            res.end("0");
        }
    });
    connection.end();
}

function getItemData(data,res){
    let mysql = require('mysql');
    let connection = mysql.createConnection({
        host : '172.17.0.1',
        user : settings.mysqluser,
        password : settings.mysqlpassword,
        port : 3306,
        database: 'react_DB'
    });

    connection.connect();
    var rows = connection.query('SELECT id  FROM items WHERE url = "'+ data +'";',function(err,result){
        if(err){
            console.log(err);
            return;
        }
       // if(rows && rows.length){
       //     console.log(rows);
       // }
    });
    connection.end(function(){
       console.log("end");
    });
}
server.listen(settings.port,settings.host)
